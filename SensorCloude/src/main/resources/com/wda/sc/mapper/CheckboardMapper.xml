<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wda.sc.mapper.CheckboardMapper">

   <select id="getList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="com.wda.sc.domain.Paging">
      <![CDATA[
      select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{endnum}) x
      where x.rnum >= #{startnum}
      order by x.reg_date desc
      ]]>
   </select>
      
   <select id="viewgetList" resultType="com.wda.sc.domain.CheckBoardVO">
   select c.board_no,m.name, c.user_id, c.title, c.board_content, c.reg_date,c.board_status,c.site_name, c.site_id
      from (select board_no,check_board.user_id, check_board.title, check_board.board_content,
             check_board.reg_date as reg_date,
             check_board.board_status,check_board.site_id, site.site_name
           from check_board,site
           where check_board.site_id = site.site_id) c,member m
      where c.user_id = m.user_id
      and c.board_no = #{board_no}
   </select>
   
   
   
   
   
   <select id="getPageNum" resultType="int">
         select count(board_no) from check_board
   </select>
   
   <select id="mainList" resultType="com.wda.sc.domain.CheckBoardVO">
   <![CDATA[
select rownum, a.*, b.site_name, c.name, d.filetype, d.uuid
from (select board_no,user_id, reg_date, title, board_content, board_status, site_id from check_board order by reg_date desc) a , site b, member c, 
(select *
from check_board_file 
where rowid in (select max(rowid) from check_board_file group by board_no)) d
where a.site_id = b.site_id
and a.user_id = c.user_id
and a.board_no = d.board_no(+)
and rownum < 7
order by reg_date desc
   ]]>
   </select>
   
   <!-- 점검이력 글쓰기 -->
   <insert id="insertcheckboard" parameterType="com.wda.sc.domain.CheckBoardVO">
   insert into check_board(board_no,user_id,reg_date,title,board_content,board_status,site_id)
   values(check_seq.nextval, #{user_id}, sysdate,#{title},#{board_content},#{board_status},#{site_id})
   </insert>
   <insert id="insertSelectKey">
   <selectKey resultType="int" order="BEFORE" keyProperty="board_no">select check_seq.nextval from dual</selectKey>
   insert into check_board(board_no,user_id,reg_date,title,board_content,board_status,site_id)
   values(#{board_no}, #{user_id}, sysdate,#{title},#{board_content},#{board_status},#{site_id})
   </insert>
   

   <!-- 점검이력 수정 권한체크 -->
   
   <select id="checkauthority" resultType="int">
      select m_level
      from member
      where user_id = #{user_id}
      
   </select>
   
   <!-- 현장아이디 넘기기 -->
	
	<select id="getsiteid" resultType="int">
		select site_id
		from check_board
		WHERE board_no = #{board_no}
		
	</select>
   
   <!-- 첨부파일 테이블 삭제 -->
   <delete id="filedelete">
      DELETE FROM check_board_file WHERE board_no = #{board_no}
   </delete>
   
   <!-- 첨부파일 테이블 삭제 -->
   <delete id="checkboardDelete">
      DELETE FROM check_board WHERE board_no = #{board_no}
   </delete>
   
   <!-- 점검이력 검색 -->
    <select id="checkSearch" resultType="com.wda.sc.domain.CheckBoardVO">
      select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
	from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
      from check_board,site
      where check_board.site_id = site.site_id) c,member m
	where c.user_id = m.user_id and ${searchType} LIKE '%' || '${keyword}' || '%'
   </select>
   
   <!-- 점검이력 검색 + 페이징 -->
   <select id="getSearchResult" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="map">
    <![CDATA[
      select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id) c,member m
                 where c.user_id = m.user_id and ${Search.searchType} LIKE '%' || '${Search.keyword}' || '%'
                 order by reg_date desc) p where rownum < #{Paging.endnum}) x
      where x.rnum >= #{Paging.startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
   <!-- 수리내역 글 수정 -->
   <update id="updateCheck" parameterType="com.wda.sc.domain.CheckBoardVO">
		update ( select * from check_board where board_no = #{board_no})
		set reg_date = sysdate, title = #{title}, board_content = #{board_content}, board_status = #{board_status}
	</update>
	
   <!-- 점검이력 글 수정 -->
   <update id="updateCheckBoard" parameterType="com.wda.sc.domain.CheckBoardVO">
		update ( select * from check_board where board_no = #{board_no})
		set reg_date = sysdate, title = #{title}, board_content = #{board_content}, board_status = #{board_status}, site_id = #{site_id}
	</update>
	
	<!-- 날짜별 검색 -->
	<select id="dateChange" resultType="int">
      	select * from check_board
		where reg_date BETWEEN add_months(sysdate, -#{data}) and sysdate
		order by reg_date
    </select>
    
    <!-- 날짜별 검색 + 페이징 -->
      <select id="getTermList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="map">
      <![CDATA[
      select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and reg_date BETWEEN add_months(sysdate, -#{data}) and sysdate) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{paging.endnum}) x
      where x.rnum >= #{paging.startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
     <!-- 앱 현장클릭시  해당 현장에대한 점검이력 글 -->
   <select id="apprepairList" resultType="com.wda.sc.domain.CheckBoardVO">
   <![CDATA[
   		 select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
         from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
               from check_board,site
               where check_board.site_id = site.site_id and check_board.site_id = #{site_id}) c,member m
         where c.user_id = m.user_id
         order by reg_date desc
   ]]>    
   </select>
   
   <!-- 점검이력 개수 가져오기 -->
   <select id="checkManagePageNum" resultType="int">
         select count(board_no) from check_board where board_status = #{status}
   </select>
   <!-- open인 점검이력만 가져오기 -->
   <select id="getOpenList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="com.wda.sc.domain.Paging">
      <![CDATA[
     select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and board_status = 0) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{endnum}) x
      where x.rnum >= #{startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
   <!-- fixed인 점검이력만 가져오기 -->
   <select id="getFixedList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="com.wda.sc.domain.Paging">
      <![CDATA[
     select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and board_status = 1) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{endnum}) x
      where x.rnum >= #{startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
   <!-- close인 점검이력만 가져오기 -->
   <select id="getCloseList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="com.wda.sc.domain.Paging">
      <![CDATA[
     select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and board_status = 2) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{endnum}) x
      where x.rnum >= #{startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
    <!-- 날짜별 검색 -->
	<select id="adminDateChange" resultType="int">
      	select * from check_board
		where reg_date BETWEEN add_months(sysdate, -#{data}) and sysdate and board_status = #{status}
		order by reg_date
    </select>
    
    <!-- 날짜별 검색 + 페이징 -->
      <select id="getAdminTermList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="map">
      <![CDATA[
      select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and reg_date BETWEEN add_months(sysdate, -#{data.data}) and sysdate and check_board.board_status = #{data.status}) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{paging.endnum}) x
      where x.rnum >= #{paging.startnum}
      order by x.reg_date desc
      ]]>
   	</select>
   	
   	<!-- 상태에 따른 점검이력만 가져오기 -->
   <select id="getStatusList" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="com.wda.sc.domain.Paging">
      <![CDATA[
     select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and board_status = #{board_status}) c,member m
                 where c.user_id = m.user_id
                 order by reg_date desc) p where rownum < #{endnum}) x
      where x.rnum >= #{startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
    <!-- 점검이력관리 검색 -->
    <select id="checkManageSearch" resultType="com.wda.sc.domain.CheckBoardVO">
      select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
	  from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
      from check_board,site
      where check_board.site_id = site.site_id and check_board.board_status = ${status}) c,member m
	  where c.user_id = m.user_id and ${search.searchType} LIKE '%' || '${search.keyword}' || '%'
   </select>
   
   <!-- 점검이력관리 검색 + 페이징 -->
   <select id="getcheckManageSearch" resultType="com.wda.sc.domain.CheckBoardVO" parameterType="map">
    <![CDATA[
      select x.rnum, x.* from
         (select rownum as rnum, p.* from
               (select c.board_no, m.name, c.user_id, c.title,c.reg_date,c.board_status,c.site_name 
                from (select board_no,check_board.user_id, check_board.title, check_board.reg_date as reg_date,check_board.board_status,check_board.site_id, site.site_name
                     from check_board,site
                     where check_board.site_id = site.site_id and check_board.board_status = ${Paging.board_status}) c,member m
                 where c.user_id = m.user_id and ${Search.searchType} LIKE '%' || '${Search.keyword}' || '%'
                 order by reg_date desc) p where rownum < #{Paging.endnum}) x
      where x.rnum >= #{Paging.startnum}
      order by x.reg_date desc
      ]]>
   </select>
   
   <delete id="mfiledelete">
      DELETE FROM check_board_file WHERE board_no = #{board_no} and uuid = #{uuid}
   </delete>
   
   	
</mapper>